
# =========================================
# Production MariaDB Connection Fix Guide
# =========================================

# Step 1: Connect to your production server
ssh root@sys.glomartrealestates.com

# Step 2: Check MariaDB service status
sudo systemctl status mariadb

# Step 3: Test root connection with your actual password
mysql -u root -p
# Enter password: ZeroCall20!@HH##1655&&

# Step 4: Once connected to MariaDB, run these SQL commands:
# ========================================================

-- Check if database exists
SHOW DATABASES LIKE 'django_db_glomart_rs';

-- If database doesn't exist, create it
CREATE DATABASE IF NOT EXISTS django_db_glomart_rs CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- Create dedicated Django user (more secure than using root)
CREATE USER IF NOT EXISTS 'django_prod'@'localhost' IDENTIFIED BY 'DjangoProd2024!Secure#';

-- Grant all privileges on the Django database
GRANT ALL PRIVILEGES ON django_db_glomart_rs.* TO 'django_prod'@'localhost';

-- Apply changes
FLUSH PRIVILEGES;

-- Verify the user was created
SELECT User, Host FROM mysql.user WHERE User = 'django_prod';

-- Test the database exists
USE django_db_glomart_rs;
SHOW TABLES;

-- Exit MariaDB
EXIT;

# Step 5: Test the new user connection
mysql -u django_prod -p django_db_glomart_rs
# Enter password: DjangoProd2024!Secure#

# Step 6: If you prefer to keep using root user, fix root permissions:
# ====================================================================
mysql -u root -p
# Run: GRANT ALL PRIVILEGES ON django_db_glomart_rs.* TO 'root'@'localhost';
# Run: FLUSH PRIVILEGES;
# Run: EXIT;

# Step 7: Update Django settings (see update_production_settings.py)

# Step 8: Test Django connection
cd /var/www/glomart-crm
source venv/bin/activate
python manage.py check --database default

# Step 9: Restart Django service
sudo systemctl restart glomart-crm
sudo systemctl status glomart-crm

# Generated by Django 5.2.6 on 2025-09-17 12:30

from django.db import migrations


def populate_status_and_source_data(apps, schema_editor):
    """Populate LeadStatus and LeadSource tables with default data"""
    LeadStatus = apps.get_model('leads', 'LeadStatus')
    LeadSource = apps.get_model('leads', 'LeadSource')
    
    # Create default lead statuses
    statuses = [
        ('New', 'Newly created lead, no contact made yet', '#3b82f6', 1),
        ('Contacted', 'Initial contact has been made', '#6366f1', 2),
        ('Qualified', 'Lead has been qualified and shows interest', '#8b5cf6', 3),
        ('Proposal Sent', 'Proposal or quote has been sent', '#a855f7', 4),
        ('Negotiation', 'In negotiation phase', '#c084fc', 5),
        ('Won', 'Deal closed successfully', '#10b981', 6),
        ('Lost', 'Deal lost or lead disqualified', '#ef4444', 7),
        ('Follow Up', 'Needs follow up at later date', '#f59e0b', 8),
        ('Unresponsive', 'Lead is not responding to communications', '#6b7280', 9),
    ]
    
    for name, desc, color, order in statuses:
        LeadStatus.objects.get_or_create(
            name=name,
            defaults={
                'description': desc,
                'color': color,
                'order': order,
                'is_active': True,
                'is_final': name in ['Won', 'Lost']
            }
        )
    
    # Create default lead sources
    sources = [
        ('Website', 'Leads from company website'),
        ('Social Media', 'Leads from social media platforms'),
        ('Google Ads', 'Leads from Google advertising'),
        ('Facebook Ads', 'Leads from Facebook advertising'),
        ('Referral', 'Referrals from existing clients'),
        ('Cold Calling', 'Leads from cold calling campaigns'),
        ('Email Marketing', 'Leads from email campaigns'),
        ('Walk-in', 'Direct walk-in customers'),
        ('Trade Show', 'Leads from trade shows and events'),
        ('Partner', 'Leads from business partners'),
        ('Direct Mail', 'Leads from direct mail campaigns'),
        ('Other', 'Other sources not listed above'),
    ]
    
    for name, desc in sources:
        LeadSource.objects.get_or_create(
            name=name,
            defaults={
                'description': desc,
                'is_active': True
            }
        )


def reverse_migration(apps, schema_editor):
    """Reverse the migration if needed"""
    LeadStatus = apps.get_model('leads', 'LeadStatus')
    LeadSource = apps.get_model('leads', 'LeadSource')
    
    LeadStatus.objects.all().delete()
    LeadSource.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('leads', '0005_populate_reference_data'),
    ]

    operations = [
        migrations.RunPython(populate_status_and_source_data, reverse_migration),
    ]
